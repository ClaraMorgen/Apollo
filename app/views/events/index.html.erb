  <!-- Search bar -->
  <div class="search-form-bar search-form-index">
    <div class="form-fields-index">
      <%= simple_form_for :search, url: events_path, html: {id: "search_form", method: "GET", :class => 'form-inline form-prevent-submit'}, remote: true do |f| %>
      <%= f.input :city, placeholder: "City", label: false, input_html: { class: "input-form form-control input-form-index search-ajax", value: @query[:city], style: "width: 160px;" } %>

      <%= f.input :date, as: :string, input_html: { class: "datepicker form-control input-form input-form-index search-ajax", value: @query[:date], style: "width: 160px;" }, label: false, placeholder: "  Date" %>
      <%= f.input :mood,  prompt: "Mood", label: false, input_html: { class: "input-form form-control input-form-index search-ajax", id: "cusSelectbox2"}, selected: @query[:mood], collection: Event::MOOD %>

      <%= f.input :category, collection: Event::CATEGORY, label: false, input_html: { class: "input-form form-control input-form-index search-ajax", id: "cusSelectbox1" }, prompt: "Category", selected: @query[:category]%>

      <div id="price-slider" style="width: 140px; margin: 0; display: inline-block"></div>

      <%= f.input :price_cents,  input_html: { id: "price-display", label: "Maximum Price", value: 25, min: 5, max: 50, readonly: true, class: "form-control input-form input-form-index search-ajax", style: "background: transparent; border: none; box-shadow: none; width: 70px; margin-left: 0;" } %>

      <%= f.button :submit, class: "btn btn-danger", value: "Search", id: "submitSearch" %>
      <% end %>
    </div>
  </div>
  <div class="wrapper wrapper-search">


    <!-- Page container -->
    <div class="container container-search">
      <!-- Card container -->
      <div class="cards" id="cardsList">
        <!-- PARTIAL -->
        <%= render "card_list", events: @events %>
      </div>
      <%= paginate @events %>
    </div>

    <!-- Map container -->
    <div id="map-search" ></div>
  </div>

  <!-- javascript -->
  <% content_for(:after_js) do %>

  <%= javascript_tag do %>

  $( function() {

    $( "#price-slider" ).slider({
    range: "min",
    value: parseInt(<%= @query[:price_cents].try(:gsub, " €", "") || 60 %>),
    min: 0,
    max: 60,
    slide: function(event, ui) {
      $( "#price-display").val( ui.value + " €");
      var form = document.getElementById("submitSearch");
      form.click();
    }
  });
  $( "#price-display" ).val( $( "#price-slider" ).slider( "value" ) + " €");
  } );
<% end %>

<%= javascript_tag do %>
var styles = [
{
  "featureType": "all",
  "elementType": "all",
  "stylers": [
  {
    "visibility": "on"
  }
  ]
},
{
  "featureType": "all",
  "elementType": "labels",
  "stylers": [
  {
    "visibility": "on"
  }
  ]
},
{
  "featureType": "all",
  "elementType": "labels.text",
  "stylers": [
  {
    "visibility": "on"
  }
  ]
},
{
  "featureType": "all",
  "elementType": "labels.text.fill",
  "stylers": [
  {
    "saturation": 36
  },
  {
    "color": "#333333"
  },
  {
    "lightness": 40
  },
  {
    "visibility": "off"
  }
  ]
},
{
  "featureType": "all",
  "elementType": "labels.text.stroke",
  "stylers": [
  {
    "visibility": "on"
  },
  {
    "color": "#ffffff"
  },
  {
    "lightness": 16
  }
  ]
},
{
  "featureType": "all",
  "elementType": "labels.icon",
  "stylers": [
  {
    "visibility": "off"
  }
  ]
},
{
  "featureType": "administrative",
  "elementType": "geometry.fill",
  "stylers": [
  {
    "lightness": 20
  }
  ]
},
{
  "featureType": "administrative",
  "elementType": "geometry.stroke",
  "stylers": [
  {
    "color": "#fefefe"
  },
  {
    "lightness": 17
  },
  {
    "weight": 1.2
  }
  ]
},
{
  "featureType": "administrative",
  "elementType": "labels.text",
  "stylers": [
  {
    "visibility": "off"
  }
  ]
},
{
  "featureType": "administrative.province",
  "elementType": "geometry",
  "stylers": [
  {
    "visibility": "on"
  }
  ]
},
{
  "featureType": "administrative.locality",
  "elementType": "all",
  "stylers": [
  {
    "visibility": "on"
  }
  ]
},
{
  "featureType": "administrative.neighborhood",
  "elementType": "all",
  "stylers": [
  {
    "visibility": "on"
  }
  ]
},
{
  "featureType": "administrative.land_parcel",
  "elementType": "all",
  "stylers": [
  {
    "visibility": "on"
  }
  ]
},
{
  "featureType": "landscape",
  "elementType": "geometry",
  "stylers": [
  {
    "color": "#f5f5f5"
  },
  {
    "lightness": 20
  }
  ]
},
{
  "featureType": "landscape",
  "elementType": "labels.text",
  "stylers": [
  {
    "visibility": "off"
  }
  ]
},
{
  "featureType": "landscape.man_made",
  "elementType": "geometry.fill",
  "stylers": [
  {
    "color": "#f4f4f4"
  }
  ]
},
{
  "featureType": "poi",
  "elementType": "geometry",
  "stylers": [
  {
    "color": "#f5f5f5"
  },
  {
    "lightness": 21
  }
  ]
},
{
  "featureType": "poi",
  "elementType": "geometry.fill",
  "stylers": [
  {
    "color": "#f2f2f2"
  }
  ]
},
{
  "featureType": "poi",
  "elementType": "labels.text",
  "stylers": [
  {
    "visibility": "off"
  }
  ]
},
{
  "featureType": "poi.park",
  "elementType": "geometry",
  "stylers": [
  {
    "color": "#dedede"
  },
  {
    "lightness": 21
  }
  ]
},
{
  "featureType": "poi.park",
  "elementType": "geometry.fill",
  "stylers": [
  {
    "color": "#edffeb"
  }
  ]
},
{
  "featureType": "road",
  "elementType": "labels.text",
  "stylers": [
  {
    "visibility": "on"
  }
  ]
},
{
  "featureType": "road.highway",
  "elementType": "geometry.fill",
  "stylers": [
  {
    "color": "#ffffff"
  },
  {
    "lightness": 17
  }
  ]
},
{
  "featureType": "road.highway",
  "elementType": "geometry.stroke",
  "stylers": [
  {
    "color": "#ffffff"
  },
  {
    "lightness": 29
  },
  {
    "weight": 0.2
  }
  ]
},
{
  "featureType": "road.arterial",
  "elementType": "geometry",
  "stylers": [
  {
    "color": "#ffffff"
  },
  {
    "lightness": 18
  }
  ]
},
{
  "featureType": "road.local",
  "elementType": "geometry",
  "stylers": [
  {
    "color": "#ffffff"
  },
  {
    "lightness": 16
  }
  ]
},
{
  "featureType": "transit",
  "elementType": "geometry",
  "stylers": [
  {
    "color": "#f2f2f2"
  },
  {
    "lightness": 19
  }
  ]
},
{
  "featureType": "water",
  "elementType": "geometry",
  "stylers": [
  {
    "color": "#e9e9e9"
  },
  {
    "lightness": 17
  }
  ]
},
{
  "featureType": "water",
  "elementType": "geometry.fill",
  "stylers": [
  {
    "color": "#dfeffa"
  }
  ]
}
]


var handler = Gmaps.build('Google');
handler.buildMap({ provider: {styles: styles},
internal: { id: 'map-search' } }, function() {
markers = handler.addMarkers(<%= raw @hash.to_json %>);
handler.bounds.extendWith(markers);
handler.fitMapToBounds();
if (markers.length == 0) {
handler.getMap().setZoom(2);
} else if (markers.length == 1) {
handler.getMap().setZoom(14);
}
});




<% end %>
<% end %>
